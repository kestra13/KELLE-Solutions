@using Microsoft.AspNetCore.Identity
@using KelleSolutions.Models

@* Injecting SignInManager and UserManager services to handle user authentication *@
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@* Navigation list for user-related links such as login, register, and manage account *@
<ul class="navbar-nav">
    @* Check if the user is signed in *@
    @if (SignInManager.IsSignedIn(User))
    {
        @* Display the user's name with a link to manage their account *@
        <li class="nav-item">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        
        @* Logout form with a button to sign out, redirecting back to the home page *@
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        @* If not signed in, show links to Register and Login pages *@
        <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
