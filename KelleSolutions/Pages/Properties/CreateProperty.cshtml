@page
@model KelleSolutions.Pages.Properties.CreatePropertyModel
@{
    ViewData["Title"] = "Create New Property";
}

<h2>Create New Property</h2>

<form method="post">
    <!-- Street Address with autocomplete for selecting an address -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.StreetAddress" class="control-label">Street Address *</label>
        <input asp-for="RealEstateProperty.StreetAddress" id="StreetAddress" class="form-control" placeholder="Start typing an address..." autocomplete="off" />
        <span asp-validation-for="RealEstateProperty.StreetAddress" class="text-danger"></span>
        <ul id="propertySuggestions" class="list-group"></ul> <!-- List for displaying address suggestions -->
    </div>

    <!-- Apartment or Unit Number -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.UnitNumber" class="control-label">Apartment/Unit Number</label>
        <input asp-for="RealEstateProperty.UnitNumber" class="form-control" />
    </div>

    <!-- City -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.City" class="control-label">City *</label>
        <input asp-for="RealEstateProperty.City" class="form-control" />
        <span asp-validation-for="RealEstateProperty.City" class="text-danger"></span>
    </div>

    <!-- State or Province -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.State" class="control-label">State/Province *</label>
        <input asp-for="RealEstateProperty.State" class="form-control" />
        <span asp-validation-for="RealEstateProperty.State" class="text-danger"></span>
    </div>

    <!-- Zip Code -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.ZipCode" class="control-label">Zip Code *</label>
        <input asp-for="RealEstateProperty.ZipCode" class="form-control" type="text" />
        <span asp-validation-for="RealEstateProperty.ZipCode" class="text-danger"></span>
    </div>

    <!-- Property Price -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.Price" class="control-label">Price *</label>
        <input asp-for="RealEstateProperty.Price" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="RealEstateProperty.Price" class="text-danger"></span>
    </div>

    <!-- Property Description -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.Description" class="control-label">Description</label>
        <textarea asp-for="RealEstateProperty.Description" class="form-control"></textarea>
    </div>

    <!-- Bedrooms -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.Bedrooms" class="control-label">Bedrooms *</label>
        <input asp-for="RealEstateProperty.Bedrooms" class="form-control" type="number" min="1" />
        <span asp-validation-for="RealEstateProperty.Bedrooms" class="text-danger"></span>
    </div>

    <!-- Bathrooms -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.Bathrooms" class="control-label">Bathrooms *</label>
        <input asp-for="RealEstateProperty.Bathrooms" class="form-control" type="number" min="1" />
        <span asp-validation-for="RealEstateProperty.Bathrooms" class="text-danger"></span>
    </div>

    <!-- Date Listed -->
    <div class="form-group">
        <label asp-for="RealEstateProperty.DateListed" class="control-label">Date Listed</label>
        <input asp-for="RealEstateProperty.DateListed" class="form-control" type="date" />
    </div>

    <!-- Submit and Cancel buttons -->
    <button type="submit" class="btn btn-primary">Create Property</button>
    <a asp-page="/AT_Dashboard" class="btn btn-secondary" onclick="return confirmCancelIfDirty();">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Listen for input in the StreetAddress field
            $('#StreetAddress').on('input', function () {
                var query = $(this).val();
                
                // Trigger the AJAX request if the query length is more than 1 character
                if (query.length > 1) {
                    $.ajax({
                        url: '/api/PropertiesApi/GetPropertySuggestions', // API endpoint
                        data: { term: query }, // Send the user input as the 'term' parameter
                        success: function (data) {
                            $('#propertySuggestions').empty(); // Clear previous suggestions
                            
                            // Loop through the returned data and display each item
                            data.forEach(function (item) {
                                $('#propertySuggestions').append(
                                    '<li class="list-group-item suggestion-item" data-id="' + item.id + '">' + item.streetAddress + ', ' + item.city + ', ' + item.state + '</li>'
                                );
                            });
                        }
                    });
                } else {
                    $('#propertySuggestions').empty(); // Clear suggestions if input is too short
                }
            });

            // Click event for selecting a suggestion
            $(document).on('click', '.suggestion-item', function () {
                var selectedAddress = $(this).text(); // Get the selected address
                $('#StreetAddress').val(selectedAddress); // Set it in the input field
                $('#propertySuggestions').empty(); // Clear the suggestions list
            });

            // Hide suggestions when clicking outside the input or suggestions
            $(document).click(function (e) {
                if (!$(e.target).closest('#StreetAddress, #propertySuggestions').length) {
                    $('#propertySuggestions').empty(); // Hide suggestions
                }
            });
        });
    </script>
    
    <script>
        function confirmCancelIfDirty() {
            // Get all input and textarea fields in the form
            const inputs = document.querySelectorAll('input[type="text"], input[type="number"], input[type="date"], textarea');
            
            // Check if any input field has a non-empty value
            for (let input of inputs) {
                if (input.value.trim() !== "") {
                    return confirm("Are you sure you want to cancel? Unsaved changes will be lost.");
                }
            }
            
            // No data in fields, allow navigation without confirmation
            return true;
        }
    </script>

}
